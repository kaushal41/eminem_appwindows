// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   	ViewModel.tt
// Version:		2.0
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Input;
using Controls = WPAppStudio.Controls;
using Entities = WPAppStudio.Entities;
using EntitiesBase = WPAppStudio.Entities.Base;
using IServices = WPAppStudio.Services.Interfaces;
using IViewModels = WPAppStudio.ViewModel.Interfaces;
using Localization = WPAppStudio.Localization;
using Repositories = WPAppStudio.Repositories;
using Services = WPAppStudio.Services;
using ViewModelsBase = WPAppStudio.ViewModel.Base;
using WPAppStudio;
using WPAppStudio.Shared;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of costumes_Detail ViewModel.
    /// </summary>
    [CompilerGenerated]
    [GeneratedCode("Radarc", "4.0")]
    public partial class costumes_DetailViewModel : ViewModelsBase.VMBase, IViewModels.Icostumes_DetailViewModel, ViewModelsBase.INavigable
    {       

		private readonly Repositories.costumes_suitsCollection _costumes_suitsCollection;
		private readonly IServices.IDialogService _dialogService;
		private readonly IServices.INavigationService _navigationService;
		private readonly IServices.ISpeechService _speechService;
		private readonly IServices.IShareService _shareService;
		private readonly IServices.ILiveTileService _liveTileService;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="costumes_DetailViewModel" /> class.
        /// </summary>
        /// <param name="costumes_suitsCollection">The Costumes_suits Collection.</param>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="speechService">The Speech Service.</param>
        /// <param name="shareService">The Share Service.</param>
        /// <param name="liveTileService">The Live Tile Service.</param>
        public costumes_DetailViewModel(Repositories.costumes_suitsCollection costumes_suitsCollection, IServices.IDialogService dialogService, IServices.INavigationService navigationService, IServices.ISpeechService speechService, IServices.IShareService shareService, IServices.ILiveTileService liveTileService)
        {
			_costumes_suitsCollection = costumes_suitsCollection;
			_dialogService = dialogService;
			_navigationService = navigationService;
			_speechService = speechService;
			_shareService = shareService;
			_liveTileService = liveTileService;
        }
		
	
		private Entities.suitsCollectionSchema _currentsuitsCollectionSchema;

        /// <summary>
        /// CurrentsuitsCollectionSchema property.
        /// </summary>		
        public Entities.suitsCollectionSchema CurrentsuitsCollectionSchema
        {
            get
            {
				return _currentsuitsCollectionSchema;
            }
            set
            {
                SetProperty(ref _currentsuitsCollectionSchema, value);
            }
        }
	
		private bool _hasNextpanoramacostumes_Detail0;

        /// <summary>
        /// HasNextpanoramacostumes_Detail0 property.
        /// </summary>		
        public bool HasNextpanoramacostumes_Detail0
        {
            get
            {
				return _hasNextpanoramacostumes_Detail0;
            }
            set
            {
                SetProperty(ref _hasNextpanoramacostumes_Detail0, value);
            }
        }
	
		private bool _hasPreviouspanoramacostumes_Detail0;

        /// <summary>
        /// HasPreviouspanoramacostumes_Detail0 property.
        /// </summary>		
        public bool HasPreviouspanoramacostumes_Detail0
        {
            get
            {
				return _hasPreviouspanoramacostumes_Detail0;
            }
            set
            {
                SetProperty(ref _hasPreviouspanoramacostumes_Detail0, value);
            }
        }

        /// <summary>
        /// Delegate method for the TextToSpeechcostumes_DetailStaticControlCommand command.
        /// </summary>
        public  void TextToSpeechcostumes_DetailStaticControlCommandDelegate() 
        {
				_speechService.TextToSpeech(CurrentsuitsCollectionSchema.Subtitle + " " + CurrentsuitsCollectionSchema.Description);
        }
		

        private ICommand _textToSpeechcostumes_DetailStaticControlCommand;

        /// <summary>
        /// Gets the TextToSpeechcostumes_DetailStaticControlCommand command.
        /// </summary>
        public ICommand TextToSpeechcostumes_DetailStaticControlCommand
        {
            get { return _textToSpeechcostumes_DetailStaticControlCommand = _textToSpeechcostumes_DetailStaticControlCommand ?? new ViewModelsBase.DelegateCommand(TextToSpeechcostumes_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the Sharecostumes_DetailStaticControlCommand command.
        /// </summary>
        public  void Sharecostumes_DetailStaticControlCommandDelegate() 
        {
				_shareService.Share(CurrentsuitsCollectionSchema.Subtitle, CurrentsuitsCollectionSchema.Description, "", CurrentsuitsCollectionSchema.Image);
        }
		

        private ICommand _sharecostumes_DetailStaticControlCommand;

        /// <summary>
        /// Gets the Sharecostumes_DetailStaticControlCommand command.
        /// </summary>
        public ICommand Sharecostumes_DetailStaticControlCommand
        {
            get { return _sharecostumes_DetailStaticControlCommand = _sharecostumes_DetailStaticControlCommand ?? new ViewModelsBase.DelegateCommand(Sharecostumes_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the PinToStartcostumes_DetailStaticControlCommand command.
        /// </summary>
        public  void PinToStartcostumes_DetailStaticControlCommandDelegate() 
        {
				_liveTileService.PinToStart(typeof(IViewModels.Icostumes_DetailViewModel), CreateTileInfocostumes_DetailStaticControl());
        }
		

        private ICommand _pinToStartcostumes_DetailStaticControlCommand;

        /// <summary>
        /// Gets the PinToStartcostumes_DetailStaticControlCommand command.
        /// </summary>
        public ICommand PinToStartcostumes_DetailStaticControlCommand
        {
            get { return _pinToStartcostumes_DetailStaticControlCommand = _pinToStartcostumes_DetailStaticControlCommand ?? new ViewModelsBase.DelegateCommand(PinToStartcostumes_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the Nextpanoramacostumes_Detail0 command.
        /// </summary>
        public  void Nextpanoramacostumes_Detail0Delegate() 
        {
			var next =  _costumes_suitsCollection.Next(CurrentsuitsCollectionSchema);

			if(next != null)
				CurrentsuitsCollectionSchema = next;

			RefreshHasPrevNext();
        }
		

        private ICommand _nextpanoramacostumes_Detail0;

        /// <summary>
        /// Gets the Nextpanoramacostumes_Detail0 command.
        /// </summary>
        public ICommand Nextpanoramacostumes_Detail0
        {
            get { return _nextpanoramacostumes_Detail0 = _nextpanoramacostumes_Detail0 ?? new ViewModelsBase.DelegateCommand(Nextpanoramacostumes_Detail0Delegate); }
        }

        /// <summary>
        /// Delegate method for the Previouspanoramacostumes_Detail0 command.
        /// </summary>
        public  void Previouspanoramacostumes_Detail0Delegate() 
        {
			var prev =  _costumes_suitsCollection.Previous(CurrentsuitsCollectionSchema);

			if(prev != null)
				CurrentsuitsCollectionSchema = prev;

			RefreshHasPrevNext();
        }
		

        private ICommand _previouspanoramacostumes_Detail0;

        /// <summary>
        /// Gets the Previouspanoramacostumes_Detail0 command.
        /// </summary>
        public ICommand Previouspanoramacostumes_Detail0
        {
            get { return _previouspanoramacostumes_Detail0 = _previouspanoramacostumes_Detail0 ?? new ViewModelsBase.DelegateCommand(Previouspanoramacostumes_Detail0Delegate); }
        }

        private void RefreshHasPrevNext()
        {
            HasPreviouspanoramacostumes_Detail0 = _costumes_suitsCollection.HasPrevious(CurrentsuitsCollectionSchema);
			HasNextpanoramacostumes_Detail0 = _costumes_suitsCollection.HasNext(CurrentsuitsCollectionSchema);
		}
		public object NavigationContext
        {
            set
            {              
                if (!(value is Entities.suitsCollectionSchema)) { return; }
                
                CurrentsuitsCollectionSchema = value as Entities.suitsCollectionSchema;
                RefreshHasPrevNext();
            }
        }
        /// <summary>
        /// Initializes a <see cref="Services.TileInfo" /> object for the costumes_DetailStaticControl control.
        /// </summary>
		/// <returns>A <see cref="Services.TileInfo" /> object.</returns>
        public Services.TileInfo CreateTileInfocostumes_DetailStaticControl()
        {
            var tileInfo = new Services.TileInfo
            {
                CurrentId = CurrentsuitsCollectionSchema.Id.ToString(),
                Title = CurrentsuitsCollectionSchema.Subtitle,
                BackTitle = CurrentsuitsCollectionSchema.Subtitle,
                BackContent = CurrentsuitsCollectionSchema.Description,
                Count = 0,
                BackgroundImagePath = CurrentsuitsCollectionSchema.Image,
                BackBackgroundImagePath = CurrentsuitsCollectionSchema.Image,
                LogoPath = "Logo-e2c6717e-5ff9-42f1-abdc-bdb215166c74.png"
            };
            return tileInfo;
        }
    }
}
